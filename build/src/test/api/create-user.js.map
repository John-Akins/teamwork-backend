{"version":3,"sources":["../../../../src/test/api/create-user.js"],"names":["chai","use","chatHttp","expect","describe","adminSecrets","before","done","request","app","post","set","send","email","password","end","error","response","data","body","console","log","token","userId","firstName","lastName","address","gender","jobRole","department","isAdmin","status","statusCode","it","to","equal","eql","be","an","userSecrets"],"mappings":"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","sourcesContent":["import chai from 'chai'\nimport chatHttp from 'chai-http'\nimport 'chai/register-should'\nimport app from '../../app'\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe(\"admin create employee\", () => {\n\n\tconst adminSecrets = {}\n\tbefore((done) => {\n\t\tchai.request(app)\n\t\t.post('/api/v1/auth/signin')\n\t\t.set('Accept', 'application/json')\n\t\t.send({\n\t\t\temail: \"lovelace@gmail.com\",\n\t\t\tpassword: \"password\"\n\t\t})\n\t\t.end((error, response) => {\n\t\t\tadminSecrets.data = response.body.data\n\t\t\tconsole.log(\"user signin\")\n\t\t\tconsole.log(adminSecrets.data)\n\t\t\tdone();\n\t\t});\n\t})\n\n\tdescribe(\"input existing email\", () => {\n\t\tconst data = {}\n\t\tbefore((done) => {\n\t\t\tchai.request(app)\n\t\t\t.post('/api/v1/auth/create-user')\n\t\t\t.set({\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\"Authorization\": `token: ${adminSecrets.data.token}`\n\t\t\t})\n\t\t\t.send({\n\t\t\t\tuserId: adminSecrets.data.userId,\n\t\t\t\tfirstName: \"akins\",\n\t\t\t\tlastName: \"akin\",\n\t\t\t\temail: \"turan@gmail.com\",\n\t\t\t\taddress: \"akins street\", \n\t\t\t\tpassword: \"dfjdskjfsk\",\n\t\t\t\tgender: \"male\",\n\t\t\t\tjobRole: \"Engineer\",\n\t\t\t\tdepartment: \"IT\",\n\t\t\t\tisAdmin: true\n\t\t\t})\n\t\t\t.end((error, response) => {\n\t\t\t\tdata.status = response.statusCode\n\t\t\t\tdata.body = response.body\n\t\t\t\tdone();\n\t\t\t});\n\t\t})\n\n\t\tit(\"should return 402 status code\", () => {\n\t\t\texpect(data.status).to.equal(402)\n\t\t})\n\t\tit(\"should return relevant error message\", () => {\n\t\t\texpect(data.body.error).eql(\"this email already exists\")\n\t\t})\n\t})\n\n\tdescribe(\"empty field(s)/ wrong input format\", () => {\n\t\tconst data = {}\n\t\tbefore((done) => {\n\t\t\tchai.request(app)\n\t\t\t.post('/api/v1/auth/create-user')\n\t\t\t.set({\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\"Authorization\": `token: ${adminSecrets.data.token}`\n\t\t\t})\n\t\t\t.send({\n\t\t\t\tuserId: adminSecrets.data.userId,\n\t\t\t\tfirstName: \"\",\n\t\t\t\tlastName: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\taddress: \"\", \n\t\t\t\tpassword: \"\",\n\t\t\t\tgender: \"\",\n\t\t\t\tjobRole: \"\",\n\t\t\t\tdepartment: \"\",\n\t\t\t\tisAdmin: false\n\t\t\t})\n\t\t\t.end((error, response) => {\n\t\t\t\tdata.status = response.statusCode\n\t\t\t\tdata.body = response.body\n\t\t\t\tdone();\n\t\t\t});\n\t\t})\n\n\t\tit(\"should return 422 status code\", () => {\n\t\t\texpect(data.status).to.equal(422)\n\t\t})\n\t\tit(\"should return an error array\", () => {\n\t\t\texpect(data.body.error).to.be.an('array')\n\t\t})\n\t})\n\t\n\tconst userSecrets = {}\t\n\n\tbefore((done) => {\n\t\tchai.request(app)\n\t\t.post('/api/v1/auth/signin')\n\t\t.set('Accept', 'application/json')\n\t\t.send({\n\t\t\temail: \"turan@gmail.com\",\n\t\t\tpassword: \"password\"\n\t\t})\n\t\t.end((error, response) => {\n\t\t\tuserSecrets.data = response.body.data\n\t\t\tdone();\n\t\t});\n\t})\n\n\tdescribe(\"user is not an admin\", () => {\n\t\tconst data = {}\n\t\tbefore((done) => {\n\t\t\tchai.request(app)\n\t\t\t.post('/api/v1/auth/create-user')\n\t\t\t.set({\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\"Authorization\": `token: ${userSecrets.data.token}`\n\t\t\t})\n\t\t\t.send({\n\t\t\t\tuserId: userSecrets.data.userId,\n\t\t\t\tfirstName: \"sola\",\n\t\t\t\tlastName: \"akin\",\n\t\t\t\temail: \"akins@gmail.com\",\n\t\t\t\taddress: \"akins street\", \n\t\t\t\tpassword: \"dfjdskjfsk\",\n\t\t\t\tgender: \"male\",\n\t\t\t\tjobRole: \"Engineer\",\n\t\t\t\tdepartment: \"IT\",\n\t\t\t\tisAdmin: false,\n\t\t\t})\n\t\t\t.end((error, response) => {\n\t\t\t\tdata.status = response.statusCode\n\t\t\t\tdata.body = response.body\n\t\t\t\tdone();\n\t\t\t});\n\t\t})\n\n\t\tit(\"should return 401 status code\", () => {\n\t\t\texpect(data.status).to.equal(401)\n\t\t})\n\t\tit(\"should return error relevant message\", () => {\n\t\t\texpect(data.body.error).eql(\"Elevated access rights required\")\n\t\t})\n\t})\n})"],"file":"create-user.js"}