{"version":3,"sources":["../../../../src/test/api/signin.js"],"names":["chai","use","chatHttp","expect","describe","data","before","done","request","app","post","set","send","email","password","end","error","response","status","statusCode","body","it","to","equal","userId","eql"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AAERC,QAAQ,CAAC,2BAAD,EAA8B,YAAO;AAC5CA,EAAAA,QAAQ,CAAC,iCAAD,EAAoC,YAAM;AACjD,QAAMC,IAAI,GAAG,EAAb;AACAC,IAAAA,MAAM,CAAC,UAACC,IAAD,EAAU;AAChBP,uBAAKQ,OAAL,CAAaC,eAAb,EACCC,IADD,CACM,qBADN,EAECC,GAFD,CAEK,QAFL,EAEe,kBAFf,EAGCC,IAHD,CAGM;AACLC,QAAAA,KAAK,EAAE,gBADF;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAHN,EAOCC,GAPD,CAOK,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACzBZ,QAAAA,IAAI,CAACa,MAAL,GAAcD,QAAQ,CAACE,UAAvB;AACAd,QAAAA,IAAI,CAACe,IAAL,GAAYH,QAAQ,CAACG,IAArB;AACAb,QAAAA,IAAI;AACJ,OAXD;AAYA,KAbK,CAAN;AAeAc,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACzClB,MAAAA,MAAM,CAACE,IAAI,CAACa,MAAN,CAAN,CAAoBI,EAApB,CAAuBC,KAAvB,CAA6B,GAA7B;AACA,KAFC,CAAF;AAGAF,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAChDlB,MAAAA,MAAM,CAACE,IAAI,CAACe,IAAL,CAAUJ,KAAX,CAAN,CAAwBM,EAAxB,CAA2BC,KAA3B,CAAiC,6BAAjC;AACA,KAFC,CAAF;AAGA,GAvBO,CAAR;AAwBAnB,EAAAA,QAAQ,CAAC,4BAAD,EAA+B,YAAM;AAC5C,QAAMC,IAAI,GAAG,EAAb;AACAC,IAAAA,MAAM,CAAC,UAACC,IAAD,EAAU;AAChBP,uBAAKQ,OAAL,CAAaC,eAAb,EACCC,IADD,CACM,qBADN,EAECC,GAFD,CAEK,QAFL,EAEe,kBAFf,EAGCC,IAHD,CAGM;AACLC,QAAAA,KAAK,EAAE,oBADF;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAHN,EAOCC,GAPD,CAOK,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACzBZ,QAAAA,IAAI,CAACa,MAAL,GAAcD,QAAQ,CAACE,UAAvB;AACAd,QAAAA,IAAI,CAACe,IAAL,GAAYH,QAAQ,CAACG,IAArB;AACAb,QAAAA,IAAI;AACJ,OAXD;AAYA,KAbK,CAAN;AAcAc,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACzClB,MAAAA,MAAM,CAACE,IAAI,CAACa,MAAN,CAAN,CAAoBI,EAApB,CAAuBC,KAAvB,CAA6B,GAA7B;AACA,KAFC,CAAF;AAGAF,IAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AACjClB,MAAAA,MAAM,CAACE,IAAI,CAACe,IAAL,CAAUf,IAAV,CAAemB,MAAhB,CAAN,CAA8BC,GAA9B,CAAkC,OAAlC;AACA,KAFC,CAAF;AAGA,GAtBO,CAAR;AAuBA,CAhDO,CAAR","sourcesContent":["import chai from 'chai'\nimport chatHttp from 'chai-http'\nimport 'chai/register-should'\nimport app from '../../app'\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe(\"admin or employee sign in\", () =>  {\n\tdescribe(\"incorrect email and/or password\", () => {\n\t\tconst data = {}\n\t\tbefore((done) => {\n\t\t\tchai.request(app)\n\t\t\t.post('/api/v1/auth/signin')\n\t\t\t.set('Accept', 'application/json')\n\t\t\t.send({\n\t\t\t\temail: \"mail@email.com\",\n\t\t\t\tpassword: \"password\"\n\t\t\t})\n\t\t\t.end((error, response) => {\n\t\t\t\tdata.status = response.statusCode\n\t\t\t\tdata.body = response.body\n\t\t\t\tdone();\n\t\t\t});\n\t\t})\t\t\n\n\t\tit(\"should return 401 status code\", () => {\n\t\t\texpect(data.status).to.equal(401)\n\t\t})\n\t\tit(\"should return relevant error message\", () => {\n\t\t\texpect(data.body.error).to.equal(\"incorrect email or password\")\n\t\t})\n\t})\n\tdescribe(\"correct email and password\", () => {\n\t\tconst data = {}\n\t\tbefore((done) => {\n\t\t\tchai.request(app)\n\t\t\t.post('/api/v1/auth/signin')\n\t\t\t.set('Accept', 'application/json')\n\t\t\t.send({\n\t\t\t\temail: \"lovelace@gmail.com\",\n\t\t\t\tpassword: \"password\"\n\t\t\t})\n\t\t\t.end((error, response) => {\n\t\t\t\tdata.status = response.statusCode\n\t\t\t\tdata.body = response.body\n\t\t\t\tdone();\n\t\t\t});\n\t\t})\t\t\n\t\tit(\"should return 200 status code\", () => {\n\t\t\texpect(data.status).to.equal(200)\n\t\t})\n\t\tit(\"should return user Id\", () => {\n\t\t\texpect(data.body.data.userId).eql('10001')\n\t\t})\n\t})\n})"],"file":"signin.js"}